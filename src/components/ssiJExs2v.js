// Generated by Framer (7f988a2)
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
  addFonts,
  addPropertyControls,
  ComponentViewportProvider,
  ControlType,
  cx,
  getFonts,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS,
} from "../framer_scripts/framer.K3G2LCX5.mjs";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import { Toggle_About } from "https://framerusercontent.com/modules/yue1wEIuxL5Wxj17VKpu/rvoe6u8OOiWRrmZZxev9/Toggle.js";
import ButtonNavigation from "https://framerusercontent.com/modules/K1EW0NJZY7YT5oxtksXa/Xkww745ctfU9d0K9Fv9v/uhXJOiE8A.js";
import ButtonInfo from "https://framerusercontent.com/modules/zi01YqG0pJuFN69uhjkj/tHA6BJlshCNj1VhSFpju/v1elJq3ZD.js";
const ButtonNavigationFonts = getFonts(ButtonNavigation);
const MotionDivToggle_About = Toggle_About(motion.div);
const ButtonInfoFonts = getFonts(ButtonInfo);
const cycleOrder = ["V8QTxROtH", "lzwti0GI_"];
const serializationHash = "framer-gsSET";
const variantClassNames = {
  lzwti0GI_: "framer-v-rhamlg",
  V8QTxROtH: "framer-v-6tp6u8",
};
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants === null || variants === void 0
    ? void 0
    : variants.forEach(
        (variant) =>
          variant && Object.assign(nextOverrides, overrides[variant]),
      );
  return nextOverrides;
}
const transition1 = {
  damping: 60,
  delay: 0,
  mass: 1,
  stiffness: 500,
  type: "spring",
};
const negate = (value) => {
  return !value;
};
const convertFromEnum = (value, activeLocale) => {
  switch (value) {
    case "wdICwFIgU":
      return "i6gOtX9HJ";
    case "S8mq6sovg":
      return "cXCN9WRZT";
    case "aIDTqiHqQ":
      return "Mkh7UlvuR";
    case "AEum8CP0M":
      return "W9L1UXgGB";
    case "ejAMXCAdb":
      return "YjQoYvLeA";
    default:
      return "i6gOtX9HJ";
  }
};
const convertFromEnum1 = (value, activeLocale) => {
  switch (value) {
    case "GeY2IKYyS":
      return "i6gOtX9HJ";
    case "Gcziwg30w":
      return "cXCN9WRZT";
    case "prx67ksiV":
      return "Mkh7UlvuR";
    case "FaGOMwRAP":
      return "W9L1UXgGB";
    case "nlGtyJrl_":
      return "YjQoYvLeA";
    default:
      return "i6gOtX9HJ";
  }
};
const convertFromEnum2 = (value, activeLocale) => {
  switch (value) {
    case "wdICwFIgU":
      return "lDL6Zr7FT";
    case "S8mq6sovg":
      return "DmXzJF2F9";
    case "aIDTqiHqQ":
      return "tYRaSyaz0";
    case "AEum8CP0M":
      return "YT72_wyAg";
    case "ejAMXCAdb":
      return "aM0A7zdP1";
    default:
      return "lDL6Zr7FT";
  }
};
const convertFromEnum3 = (value, activeLocale) => {
  switch (value) {
    case "GeY2IKYyS":
      return "lDL6Zr7FT";
    case "Gcziwg30w":
      return "DmXzJF2F9";
    case "prx67ksiV":
      return "tYRaSyaz0";
    case "FaGOMwRAP":
      return "YT72_wyAg";
    case "nlGtyJrl_":
      return "aM0A7zdP1";
    default:
      return "lDL6Zr7FT";
  }
};
const Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition =
    value !== null && value !== void 0 ? value : config.transition;
  const contextValue = React.useMemo(
    () => ({ ...config, transition }),
    [JSON.stringify(transition)],
  );
  return /*#__PURE__*/ _jsx(MotionConfigContext.Provider, {
    value: contextValue,
    children: children,
  });
};
const Variants = motion(React.Fragment);
const humanReadableEnumMap = {
  AlwaysDark: "ejAMXCAdb",
  AlwaysLight: "AEum8CP0M",
  Dark: "aIDTqiHqQ",
  Default: "wdICwFIgU",
  Light: "S8mq6sovg",
};
const humanReadableEnumMap1 = {
  AlwaysDark: "nlGtyJrl_",
  AlwaysLight: "FaGOMwRAP",
  Dark: "prx67ksiV",
  Default: "GeY2IKYyS",
  Light: "Gcziwg30w",
};
const humanReadableVariantMap = { Adaptive: "V8QTxROtH", Default: "lzwti0GI_" };
const getProps = ({
  adaptiveColor,
  defaultColor,
  height,
  iconed,
  id,
  width,
  ...props
}) => {
  var _humanReadableEnumMap1_defaultColor,
    _ref,
    _ref1,
    _humanReadableVariantMap_props_variant,
    _ref2,
    _humanReadableEnumMap_adaptiveColor,
    _ref3,
    _ref4;
  return {
    ...props,
    jhbC2DOAv:
      (_ref1 =
        (_ref =
          (_humanReadableEnumMap1_defaultColor =
            humanReadableEnumMap1[defaultColor]) !== null &&
          _humanReadableEnumMap1_defaultColor !== void 0
            ? _humanReadableEnumMap1_defaultColor
            : defaultColor) !== null && _ref !== void 0
          ? _ref
          : props.jhbC2DOAv) !== null && _ref1 !== void 0
        ? _ref1
        : "GeY2IKYyS",
    Pm_hOrOqh: iconed !== null && iconed !== void 0 ? iconed : props.Pm_hOrOqh,
    variant:
      (_ref2 =
        (_humanReadableVariantMap_props_variant =
          humanReadableVariantMap[props.variant]) !== null &&
        _humanReadableVariantMap_props_variant !== void 0
          ? _humanReadableVariantMap_props_variant
          : props.variant) !== null && _ref2 !== void 0
        ? _ref2
        : "V8QTxROtH",
    ZaTyyUpS5:
      (_ref4 =
        (_ref3 =
          (_humanReadableEnumMap_adaptiveColor =
            humanReadableEnumMap[adaptiveColor]) !== null &&
          _humanReadableEnumMap_adaptiveColor !== void 0
            ? _humanReadableEnumMap_adaptiveColor
            : adaptiveColor) !== null && _ref3 !== void 0
          ? _ref3
          : props.ZaTyyUpS5) !== null && _ref4 !== void 0
        ? _ref4
        : "wdICwFIgU",
  };
};
const createLayoutDependency = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
const Component = /*#__PURE__*/ React.forwardRef(function (props, ref) {
  const { activeLocale, setLocale } = useLocaleInfo();
  const {
    style,
    className,
    layoutId,
    variant,
    ZaTyyUpS5,
    jhbC2DOAv,
    Pm_hOrOqh,
    ...restProps
  } = getProps(props);
  const {
    baseVariant,
    classNames,
    gestureHandlers,
    gestureVariant,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState({
    cycleOrder,
    defaultVariant: "V8QTxROtH",
    variant,
    variantClassNames,
  });
  const layoutDependency = createLayoutDependency(props, variants);
  const ref1 = React.useRef(null);
  const visible = negate(Pm_hOrOqh);
  const defaultLayoutId = React.useId();
  const sharedStyleClassNames = [];
  const componentViewport = useComponentViewport();
  return /*#__PURE__*/ _jsx(LayoutGroup, {
    id: layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId,
    children: /*#__PURE__*/ _jsx(Variants, {
      animate: variants,
      initial: false,
      children: /*#__PURE__*/ _jsx(Transition, {
        value: transition1,
        children: /*#__PURE__*/ _jsxs(motion.div, {
          ...restProps,
          ...gestureHandlers,
          className: cx(
            serializationHash,
            ...sharedStyleClassNames,
            "framer-6tp6u8",
            className,
            classNames,
          ),
          "data-framer-name": "Adaptive",
          layoutDependency: layoutDependency,
          layoutId: "V8QTxROtH",
          ref: ref !== null && ref !== void 0 ? ref : ref1,
          style: { ...style },
          ...addPropertyOverrides(
            { lzwti0GI_: { "data-framer-name": "Default" } },
            baseVariant,
            gestureVariant,
          ),
          children: [
            Pm_hOrOqh &&
              /*#__PURE__*/ _jsx(motion.div, {
                className: "framer-1p75lby",
                layoutDependency: layoutDependency,
                layoutId: "C6mhd1QGe",
              }),
            visible &&
              /*#__PURE__*/ _jsx(MotionDivToggle_About, {
                className: "framer-bl6iwu",
                "data-framer-name": "Text",
                layoutDependency: layoutDependency,
                layoutId: "LGNf3bx5P",
                children: /*#__PURE__*/ _jsx(ComponentViewportProvider, {
                  children: /*#__PURE__*/ _jsx(motion.div, {
                    className: "framer-10tvckf-container",
                    layoutDependency: layoutDependency,
                    layoutId: "EMmwstfVN-container",
                    children: /*#__PURE__*/ _jsx(ButtonNavigation, {
                      bXvdJ35Ta: false,
                      height: "100%",
                      id: "EMmwstfVN",
                      layoutId: "EMmwstfVN",
                      variant: convertFromEnum(ZaTyyUpS5, activeLocale),
                      width: "100%",
                      xH050kkag: "About",
                      ...addPropertyOverrides(
                        {
                          lzwti0GI_: {
                            variant: convertFromEnum1(jhbC2DOAv, activeLocale),
                          },
                        },
                        baseVariant,
                        gestureVariant,
                      ),
                    }),
                  }),
                }),
              }),
            Pm_hOrOqh &&
              /*#__PURE__*/ _jsx(MotionDivToggle_About, {
                className: "framer-d3tsv1",
                "data-framer-name": "Icon",
                layoutDependency: layoutDependency,
                layoutId: "x5x3vRtJt",
                children: /*#__PURE__*/ _jsx(ComponentViewportProvider, {
                  children: /*#__PURE__*/ _jsx(motion.div, {
                    className: "framer-cnffk8-container",
                    layoutDependency: layoutDependency,
                    layoutId: "R4ky5AfvP-container",
                    children: /*#__PURE__*/ _jsx(ButtonInfo, {
                      height: "100%",
                      id: "R4ky5AfvP",
                      layoutId: "R4ky5AfvP",
                      style: { height: "100%", width: "100%" },
                      variant: convertFromEnum2(ZaTyyUpS5, activeLocale),
                      width: "100%",
                      ...addPropertyOverrides(
                        {
                          lzwti0GI_: {
                            variant: convertFromEnum3(jhbC2DOAv, activeLocale),
                          },
                        },
                        baseVariant,
                        gestureVariant,
                      ),
                    }),
                  }),
                }),
              }),
          ],
        }),
      }),
    }),
  });
});
const css = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-gsSET.framer-18qjxvw, .framer-gsSET .framer-18qjxvw { display: block; }",
  ".framer-gsSET.framer-6tp6u8 { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }",
  ".framer-gsSET .framer-1p75lby { flex: none; height: 3px; overflow: hidden; position: relative; width: 10px; }",
  ".framer-gsSET .framer-bl6iwu { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: visible; padding: 0px; position: relative; width: min-content; }",
  ".framer-gsSET .framer-10tvckf-container { flex: none; height: auto; position: relative; width: auto; }",
  ".framer-gsSET .framer-d3tsv1 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 10px; height: 42px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 42px; }",
  ".framer-gsSET .framer-cnffk8-container { flex: none; height: 42px; position: relative; width: 42px; }",
  "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-gsSET.framer-6tp6u8, .framer-gsSET .framer-bl6iwu, .framer-gsSET .framer-d3tsv1 { gap: 0px; } .framer-gsSET.framer-6tp6u8 > * { margin: 0px; margin-left: calc(0px / 2); margin-right: calc(0px / 2); } .framer-gsSET.framer-6tp6u8 > :first-child, .framer-gsSET .framer-bl6iwu > :first-child, .framer-gsSET .framer-d3tsv1 > :first-child { margin-left: 0px; } .framer-gsSET.framer-6tp6u8 > :last-child, .framer-gsSET .framer-bl6iwu > :last-child, .framer-gsSET .framer-d3tsv1 > :last-child { margin-right: 0px; } .framer-gsSET .framer-bl6iwu > *, .framer-gsSET .framer-d3tsv1 > * { margin: 0px; margin-left: calc(10px / 2); margin-right: calc(10px / 2); } }",
];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 43
 * @framerIntrinsicWidth 91.5
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["auto","auto"]},"lzwti0GI_":{"layout":["auto","auto"]}}}
 * @framerVariables {"ZaTyyUpS5":"adaptiveColor","jhbC2DOAv":"defaultColor","Pm_hOrOqh":"iconed"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerComponentViewportWidth true
 */ const FramerssiJExs2v = withCSS(Component, css, "framer-gsSET");
export default FramerssiJExs2v;
FramerssiJExs2v.displayName = "Utilities/AboutToggle";
FramerssiJExs2v.defaultProps = { height: 43, width: 91.5 };
addPropertyControls(FramerssiJExs2v, {
  variant: {
    options: ["V8QTxROtH", "lzwti0GI_"],
    optionTitles: ["Adaptive", "Default"],
    title: "Variant",
    type: ControlType.Enum,
  },
  ZaTyyUpS5: {
    defaultValue: "wdICwFIgU",
    options: ["wdICwFIgU", "S8mq6sovg", "aIDTqiHqQ", "AEum8CP0M", "ejAMXCAdb"],
    optionTitles: ["Default", "Light", "Dark", "AlwaysLight", "AlwaysDark"],
    title: "Adaptive Color",
    type: ControlType.Enum,
  },
  jhbC2DOAv: {
    defaultValue: "GeY2IKYyS",
    options: ["GeY2IKYyS", "Gcziwg30w", "prx67ksiV", "FaGOMwRAP", "nlGtyJrl_"],
    optionTitles: ["Default", "Light", "Dark", "AlwaysLight", "AlwaysDark"],
    title: "Default Color",
    type: ControlType.Enum,
  },
  Pm_hOrOqh: {
    defaultValue: false,
    title: "Iconed",
    type: ControlType.Boolean,
  },
});
addFonts(
  FramerssiJExs2v,
  [
    { explicitInter: true, fonts: [] },
    ...ButtonNavigationFonts,
    ...ButtonInfoFonts,
  ],
  { supportsExplicitInterCodegen: true },
);
export const __FramerMetadata__ = {
  exports: {
    default: {
      type: "reactComponent",
      name: "FramerssiJExs2v",
      slots: [],
      annotations: {
        framerCanvasComponentVariantDetails:
          '{"propertyName":"variant","data":{"default":{"layout":["auto","auto"]},"lzwti0GI_":{"layout":["auto","auto"]}}}',
        framerIntrinsicHeight: "43",
        framerImmutableVariables: "true",
        framerContractVersion: "1",
        framerDisplayContentsDiv: "false",
        framerComponentViewportWidth: "true",
        framerVariables:
          '{"ZaTyyUpS5":"adaptiveColor","jhbC2DOAv":"defaultColor","Pm_hOrOqh":"iconed"}',
        framerIntrinsicWidth: "91.5",
      },
    },
    Props: { type: "tsType", annotations: { framerContractVersion: "1" } },
    __FramerMetadata__: { type: "variable" },
  },
};
