// Generated by Framer (6b748fa)
import { jsx as _jsx } from "react/jsx-runtime";
import {
  addFonts,
  addPropertyControls,
  ComponentViewportProvider,
  ControlType,
  cx,
  getFonts,
  useActiveVariantCallback,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS,
} from "../framer_scripts/framer.K3G2LCX5.mjs";
import { LayoutGroup, motion, MotionConfigContext } from "framer-motion";
import * as React from "react";
import HomeMain from "https://framerusercontent.com/modules/J3ObW8IxvsJtX54sIV4a/frrWjzJt0WFTaDA0dimh/Nmv9ul5hv.js";
const HomeMainFonts = getFonts(HomeMain);
const cycleOrder = ["LSoNEMdIJ", "qUF1uWCcd"];
const serializationHash = "framer-ILMkc";
const variantClassNames = {
  LSoNEMdIJ: "framer-v-dtw9jt",
  qUF1uWCcd: "framer-v-7bvttc",
};
function addPropertyOverrides(overrides, ...variants) {
  const nextOverrides = {};
  variants === null || variants === void 0
    ? void 0
    : variants.forEach(
        (variant) =>
          variant && Object.assign(nextOverrides, overrides[variant]),
      );
  return nextOverrides;
}
const transition1 = { duration: 0, type: "tween" };
const Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition =
    value !== null && value !== void 0 ? value : config.transition;
  const contextValue = React.useMemo(
    () => ({ ...config, transition }),
    [JSON.stringify(transition)],
  );
  return /*#__PURE__*/ _jsx(MotionConfigContext.Provider, {
    value: contextValue,
    children: children,
  });
};
const Variants = motion(React.Fragment);
const humanReadableVariantMap = {
  Horizontal: "qUF1uWCcd",
  Vertical: "LSoNEMdIJ",
};
const getProps = ({
  height,
  iconCursor,
  id,
  notice,
  projectCursor,
  width,
  ...props
}) => {
  var _humanReadableVariantMap_props_variant, _ref;
  return {
    ...props,
    d95Uyy9vG:
      iconCursor !== null && iconCursor !== void 0
        ? iconCursor
        : props.d95Uyy9vG,
    J6eOx28iq: notice !== null && notice !== void 0 ? notice : props.J6eOx28iq,
    lxzOuQJFn:
      projectCursor !== null && projectCursor !== void 0
        ? projectCursor
        : props.lxzOuQJFn,
    variant:
      (_ref =
        (_humanReadableVariantMap_props_variant =
          humanReadableVariantMap[props.variant]) !== null &&
        _humanReadableVariantMap_props_variant !== void 0
          ? _humanReadableVariantMap_props_variant
          : props.variant) !== null && _ref !== void 0
        ? _ref
        : "LSoNEMdIJ",
  };
};
const createLayoutDependency = (props, variants) => {
  if (props.layoutDependency)
    return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};
const Component = /*#__PURE__*/ React.forwardRef(function (props, ref) {
  const { activeLocale, setLocale } = useLocaleInfo();
  const {
    style,
    className,
    layoutId,
    variant,
    J6eOx28iq,
    lxzOuQJFn,
    d95Uyy9vG,
    ...restProps
  } = getProps(props);
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants,
  } = useVariantState({
    cycleOrder,
    defaultVariant: "LSoNEMdIJ",
    variant,
    variantClassNames,
  });
  const layoutDependency = createLayoutDependency(props, variants);
  const { activeVariantCallback, delay } =
    useActiveVariantCallback(baseVariant);
  const xIdMDR5tju4cq6i = activeVariantCallback(async (...args) => {
    if (J6eOx28iq) {
      const res = await J6eOx28iq(...args);
      if (res === false) return false;
    }
  });
  const ref1 = React.useRef(null);
  const defaultLayoutId = React.useId();
  const sharedStyleClassNames = [];
  const componentViewport = useComponentViewport();
  return /*#__PURE__*/ _jsx(LayoutGroup, {
    id: layoutId !== null && layoutId !== void 0 ? layoutId : defaultLayoutId,
    children: /*#__PURE__*/ _jsx(Variants, {
      animate: variants,
      initial: false,
      children: /*#__PURE__*/ _jsx(Transition, {
        value: transition1,
        children: /*#__PURE__*/ _jsx(motion.div, {
          ...restProps,
          ...gestureHandlers,
          className: cx(
            serializationHash,
            ...sharedStyleClassNames,
            "framer-dtw9jt",
            className,
            classNames,
          ),
          "data-framer-name": "Vertical",
          "data-hide-scrollbars": true,
          layoutDependency: layoutDependency,
          layoutId: "LSoNEMdIJ",
          ref: ref !== null && ref !== void 0 ? ref : ref1,
          style: { ...style },
          ...addPropertyOverrides(
            { qUF1uWCcd: { "data-framer-name": "Horizontal" } },
            baseVariant,
            gestureVariant,
          ),
          children: /*#__PURE__*/ _jsx(ComponentViewportProvider, {
            width:
              (componentViewport === null || componentViewport === void 0
                ? void 0
                : componentViewport.width) || "100vw",
            children: /*#__PURE__*/ _jsx(motion.div, {
              className: "framer-17jtu61-container",
              layoutDependency: layoutDependency,
              layoutId: "vwr_rhZjE-container",
              children: /*#__PURE__*/ _jsx(HomeMain, {
                BjX2ajSNA: d95Uyy9vG,
                height: "100%",
                id: "vwr_rhZjE",
                layoutId: "vwr_rhZjE",
                style: { width: "100%" },
                uHSd6ozPR: lxzOuQJFn,
                variant: "ggzaDwIuD",
                width: "100%",
                xIdMDR5tj: xIdMDR5tju4cq6i,
                ...addPropertyOverrides(
                  { qUF1uWCcd: { variant: "WKxObi6RI" } },
                  baseVariant,
                  gestureVariant,
                ),
              }),
            }),
          }),
        }),
      }),
    }),
  });
});
const css = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-ILMkc.framer-1lfm08y, .framer-ILMkc .framer-1lfm08y { display: block; }",
  ".framer-ILMkc.framer-dtw9jt { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: 390px; }",
  ".framer-ILMkc .framer-17jtu61-container { flex: none; height: auto; position: relative; width: 100%; }",
  "@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-ILMkc.framer-dtw9jt { gap: 0px; } .framer-ILMkc.framer-dtw9jt > * { margin: 0px; margin-bottom: calc(10px / 2); margin-top: calc(10px / 2); } .framer-ILMkc.framer-dtw9jt > :first-child { margin-top: 0px; } .framer-ILMkc.framer-dtw9jt > :last-child { margin-bottom: 0px; } }",
  '.framer-ILMkc[data-hide-scrollbars="true"]::-webkit-scrollbar, .framer-ILMkc [data-hide-scrollbars="true"]::-webkit-scrollbar { width: 0px; height: 0px; }',
  '.framer-ILMkc[data-hide-scrollbars="true"]::-webkit-scrollbar-thumb, .framer-ILMkc [data-hide-scrollbars="true"]::-webkit-scrollbar-thumb { background: transparent; }',
];
/**
 * This is a generated Framer component.
 * @framerIntrinsicHeight 7670
 * @framerIntrinsicWidth 390
 * @framerCanvasComponentVariantDetails {"propertyName":"variant","data":{"default":{"layout":["fixed","auto"]},"qUF1uWCcd":{"layout":["fixed","auto"]}}}
 * @framerVariables {"J6eOx28iq":"notice","lxzOuQJFn":"projectCursor","d95Uyy9vG":"iconCursor"}
 * @framerImmutableVariables true
 * @framerDisplayContentsDiv false
 * @framerComponentViewportWidth true
 */ const FramerPpouRypIR = withCSS(Component, css, "framer-ILMkc");
export default FramerPpouRypIR;
FramerPpouRypIR.displayName = "Home/LayoutPhone";
FramerPpouRypIR.defaultProps = { height: 7670, width: 390 };
addPropertyControls(FramerPpouRypIR, {
  variant: {
    options: ["LSoNEMdIJ", "qUF1uWCcd"],
    optionTitles: ["Vertical", "Horizontal"],
    title: "Variant",
    type: ControlType.Enum,
  },
  J6eOx28iq: { title: "Notice", type: ControlType.EventHandler },
  lxzOuQJFn: { title: "Project Cursor", type: ControlType.CustomCursor },
  d95Uyy9vG: { title: "Icon Cursor", type: ControlType.CustomCursor },
});
addFonts(
  FramerPpouRypIR,
  [{ explicitInter: true, fonts: [] }, ...HomeMainFonts],
  { supportsExplicitInterCodegen: true },
);
export const __FramerMetadata__ = {
  exports: {
    default: {
      type: "reactComponent",
      name: "FramerPpouRypIR",
      slots: [],
      annotations: {
        framerComponentViewportWidth: "true",
        framerContractVersion: "1",
        framerDisplayContentsDiv: "false",
        framerIntrinsicWidth: "390",
        framerImmutableVariables: "true",
        framerVariables:
          '{"J6eOx28iq":"notice","lxzOuQJFn":"projectCursor","d95Uyy9vG":"iconCursor"}',
        framerIntrinsicHeight: "7670",
        framerCanvasComponentVariantDetails:
          '{"propertyName":"variant","data":{"default":{"layout":["fixed","auto"]},"qUF1uWCcd":{"layout":["fixed","auto"]}}}',
      },
    },
    Props: { type: "tsType", annotations: { framerContractVersion: "1" } },
    __FramerMetadata__: { type: "variable" },
  },
};
